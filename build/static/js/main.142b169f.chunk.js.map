{"version":3,"sources":["api/tmdbapi.js","utils.js","api/recommenderapi.js","components/RowMovieCard.js","components/InputMovieCard.js","components/AboutMe.js","components/TitleCard.js","components/Loading.js","components/Error.js","App.js","index.js"],"names":["instance","axios","create","baseURL","TMDB_API_KEY","getMovieVideoId","movie_id","a","tmdbapi","get","videoResponse","videos","data","results","length","name","type","videoId","key","getMovieData","response","getRecommendedMoviesData","recommendations","recommendationsData","result","recommended_movie","push","headers","useStyles","makeStyles","root","width","height","boxShadow","backgroundColor","root_wrapper","margin","card_content","color","image_cover","RowMovieCard","props","classes","className","CardActionArea","Card","CardMedia","component","alt","title","original_title","image","poster_path","CardContent","style","padding","Typography","gutterBottom","variant","vote_average","vote_count","opts","playerVars","autoplay","fs","InputMovieCard","useState","movieVideoInfo","setMovieVideoInfo","useEffect","id","videoInfo","loadVideoInfo","src","overview","status","AboutMe","process","marginTop","href","target","rel","TitleCard","Loading","Error","Alert","maxWidth","severity","error","App","movies","setMovies","text","setText","suggestions","setSuggestions","recommendedMovies","setRecommendedMovies","inputMovieData","setInputMovieData","loading","setLoading","setError","dummieAPIRequest","recommender_api","movie_names","movieHandler","movie_name","request","FormData","append","post","responseData","input_movie","movie_data","recommendations_movie_data","handleClick","handleCardClick","finalComponent","map","movie","onClick","e","rank","value","onChange","text_value","matches","filter","regex","RegExp","match","slice","onChangeHandler","onBlur","setTimeout","placeholder","Button","disabled","startIcon","suggestion","i","display","justifyContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.142b169f.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Base URL to make requests to the Movie Database\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","import tmdbapi from \"./api/tmdbapi\";\n\nconst TMDB_API_KEY = \"fc2ce77413f99635655e3209989c0be7\";\n\n\nexport const getMovieVideoId = async (movie_id) => {\n  const videoResponse = await tmdbapi.get(\n    `/movie/${movie_id}/videos?api_key=${TMDB_API_KEY}`\n  );\n  const videos = videoResponse.data.results;\n  if (videos.length > 0)\n    return { name: videos[0].type, videoId: videos[0].key };\n  else return null;\n};\n\nexport const getMovieData = async (movie_id) => {\n  const response = await tmdbapi.get(\n    `/movie/${movie_id}?api_key=${TMDB_API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getRecommendedMoviesData = async (recommendations) => {\n  let recommendationsData = [];\n  let result = null;\n  for (let recommended_movie of recommendations) {\n    result = await getMovieData(recommended_movie.movie_id);\n    recommendationsData.push(result);\n  }\n  return recommendationsData;\n};\n","import axios from \"axios\";\n\nexport default axios.create({\n  //our deployed api URl\n  baseURL: \"https://kvgmrs-api.herokuapp.com/\",\n  //baseURL: \"http://localhost:3000/\",\n  headers: { \"Content-Type\": \"multipart/form-data\" },\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"250px\",\n    height: \"500px\",\n    boxShadow: \"0 0 8px gray\",\n    backgroundColor: \"#424242\",\n  },\n  root_wrapper: {\n    width: \"100%\",\n    margin: \"10px 20px 10px 0\",\n  },\n  card_content: {\n    color: \"rgba(255, 255, 255, 0.7)\",\n  },\n  image_cover: {\n    height: \"360px\",\n  },\n});\n\nconst BASE_IMAGE_URL = \"https://image.tmdb.org/t/p/original\";\n\nfunction RowMovieCard(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root_wrapper}>\n      <CardActionArea>\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.image_cover}\n            component=\"img\"\n            alt={props.title || props.original_title}\n            height=\"100\"\n            image={`${BASE_IMAGE_URL}${props.poster_path}`}\n            title={props.title || props.original_title}\n          />\n          <CardContent style={{ padding: \"10px\" }}>\n            <Typography\n              className=\"card_title\"\n              gutterBottom\n              variant=\"h6\"\n              component=\"h6\"\n            >\n              {props.title || props.original_title}\n            </Typography>\n            <Typography\n              className={classes.card_content}\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n            >\n              <b>Rating:</b> {props.vote_average}/10 ({props.vote_count} votes)\n            </Typography>\n          </CardContent>\n        </Card>\n      </CardActionArea>\n    </div>\n  );\n}\n\nexport default RowMovieCard;\n","import YouTube from \"react-youtube\";\nimport React, { useEffect, useState } from \"react\";\nimport { getMovieVideoId } from \"../utils\";\n\nconst opts = {\n  height: \"275\",\n  width: \"100%\",\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 1,\n    fs: 0,\n  },\n};\n\nconst BASE_IMAGE_URL = \"https://image.tmdb.org/t/p/original\";\n\nfunction InputMovieCard(props) {\n  const [movieVideoInfo, setMovieVideoInfo] = useState(null);\n\n  useEffect(() => {\n    const loadVideoInfo = async () => {\n      const videoInfo = await getMovieVideoId(props.id);\n      setMovieVideoInfo(videoInfo);\n    };\n\n    loadVideoInfo();\n  }, [props.id]);\n\n  return (\n    <div className=\"input_movie_container\">\n      <div className=\"input_movie_card\">\n        <img\n          className=\"input_poster\"\n          src={`${BASE_IMAGE_URL}${props.poster_path}`}\n          alt={props.title}\n        />\n        <div className=\"card_content\">\n          <h1 className=\"card_title\">{props.title || props.original_title}</h1>\n          <br />\n\n          {/* Youtube Video */}\n\n          {movieVideoInfo && (\n            <>\n              <h2>{movieVideoInfo.name}</h2>\n              <YouTube videoId={movieVideoInfo.videoId} opts={opts} />\n            </>\n          )}\n\n          {/* {props.genres && (\n            <p>\n              <b>Genre: </b>\n              {props.genres.map((genre) => {\n                return <>{genre}</>;\n              })}\n            </p>\n          )} */}\n          \n          <p>\n            <b>Rating: </b>\n            {props.vote_average}/10 ( <span>{props.vote_count} Votes</span> )\n          </p>\n          <p className=\"card_overview\">\n            <b>\n              Overview:\n              <br />\n            </b>\n            {props.overview}\n          </p>\n          <p>\n            <b>Status: </b>\n            {props.status}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InputMovieCard;\n","import React from \"react\";\nimport \"../styles/AboutMe.css\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nfunction AboutMe() {\n  return (\n    <>\n      <center>\n        <h1 className=\"title about_title\">About Creator</h1>\n        <br />\n      </center>\n      <div className=\"aboutme_container\">\n        <div className=\"aboutme_card\">\n          <img\n            className=\"aboutme_card__image\"\n            src={`${process.env.PUBLIC_URL}/assets/ibrahimsaleem.png`}\n            alt=\"Mohd IBRAHIM SALEEM\"\n          />\n          <div className=\"aboutme_card__content\">\n            <h1 className=\"about_name\">Mohd Ibrahim Saleem</h1>\n            <div\n              className=\"stroke\"\n              style={{\n                backgroundColor: \"white\",\n                height: \"1px\",\n                width: \"100%\",\n                marginTop: \"4px\",\n              }}\n            ></div>\n            <br />\n            <p>\n            Hi Everyone, I am Mohd Ibrahim Saleem from Bhopal, India.\nI am pursuing BTech in Computer Science and Engineering with my major in Cyber Security and Machine Learning.\nAlso work as web developer/designer and a versatile tech professional with a plethora of experience and knowledge in the fields of web apps using different web development Platforms and Websites. Implemented website maintenance, content management, updated the latest trends accordingly. And do digital marketing to increase customer engagement through social media and other online options.\n            </p>\n            <div className=\"aboutme_card__sociallinks\">\n              <div>\n                <a\n                  href=\"https://linkedin.com/in/ibrahimsaleem91\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <LinkedInIcon className=\"icon social_icon_linkedin\" />\n                </a>\n                <a\n                  href=\"https://github.com/ibrahimsaleem\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <GitHubIcon className=\"social_icon_github \" />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AboutMe;\n","import React from \"react\";\nimport \"../styles/TitleCard.css\";\n\nfunction TitleCard() {\n  return (\n    <div className=\"title_card_wrapper\">\n      <div className=\"title_card\">\n        <img\n          className=\"title_logo\"\n          src={`${process.env.PUBLIC_URL}/assets/logo.png`}\n          alt=\"logo\"\n        />\n        <h1 className=\"title\">WhatNEXT ?</h1>\n        \n        <img\n          className=\"title_logo\"\n          src={`${process.env.PUBLIC_URL}/assets/logo.png`}\n          alt=\"logo\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default TitleCard;\n","import React from \"react\";\n\nfunction Loading() {\n  return (\n    <center>\n      <br />\n      <br />\n      <img\n        src={`${process.env.PUBLIC_URL}/assets/loading.gif`}\n        alt=\"loading\"\n        width=\"250px\"\n        height=\"250px\"\n      />\n    </center>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"@material-ui/lab\";\n\nfunction Error(props) {\n  return (\n    <>\n      <br />\n      <br />\n      <center>\n        <Alert style={{ maxWidth: \"500px\" }} severity=\"error\">\n          <b>{props.error}</b>\n        </Alert>\n      </center>\n    </>\n  );\n}\n\nexport default Error;\n","import React, { useState, useEffect } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport movie_names from \"./movie_names.json\";\nimport {\n  getMovieData,\n  getRecommendedMoviesData,\n} from \"./utils\";\nimport recommender_api from \"./api/recommenderapi\";\nimport \"./App.css\";\nimport { Button } from \"@material-ui/core\";\nimport RowMovieCard from \"./components/RowMovieCard\";\nimport InputMovieCard from \"./components/InputMovieCard\";\nimport AboutMe from \"./components/AboutMe\";\nimport TitleCard from \"./components/TitleCard\";\nimport Loading from \"./components/Loading\";\nimport Error from \"./components/Error\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState(null);\n  const [recommendedMovies, setRecommendedMovies] = useState(null);\n  const [inputMovieData, setInputMovieData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMovieNames = () => {\n      setMovies(movie_names.movie_names);\n    };\n\n    const dummieAPIRequest = async () => {\n      await recommender_api.get(\"/\");\n    };\n\n    loadMovieNames();\n    dummieAPIRequest();\n  }, []);\n\n  const onChangeHandler = (text_value) => {\n    let matches = [];\n    if (text_value.length > 0) {\n      matches = movies.filter((movie) => {\n        const regex = new RegExp(`${text}`, \"gi\");\n        return movie.title.match(regex);\n      });\n    }\n\n    if (matches.length > 10) matches = matches.slice(0, 8);\n\n    setSuggestions(matches);\n    setText(text_value);\n  };\n\n  const onSuggestHandler = (text_value) => {\n    setText(text_value);\n    setSuggestions(null);\n  };\n\n  const movieHandler = async (movie_name) => {\n    setLoading(true);\n    setError(null);\n\n    const request = new FormData();\n    request.append(\"movie_name\", movie_name);\n    request.append(\"number_of_recommendations\", 10);\n\n    const response = await recommender_api.post(\"/recommend_movie\", request);\n\n    const responseData = response.data;\n    if (responseData.error) {\n      setError(responseData.error);\n    } else {\n      const movie_data = await getMovieData(responseData.input_movie.movie_id);\n      const recommendations_movie_data = await getRecommendedMoviesData(\n        responseData.recommendations\n      );\n\n\n      setInputMovieData(movie_data);\n      setRecommendedMovies(recommendations_movie_data);\n\n      setLoading(false);\n      \n    }\n    \n    setLoading(false);\n  };\n\n  const handleClick = async () => {\n    await movieHandler(text);\n  };\n\n  const handleCardClick = async (movie_name) => {\n    setText(movie_name);\n    await movieHandler(movie_name);\n  };\n\n  let finalComponent = null;\n\n  if (loading) finalComponent = <Loading />;\n  else if (error) {\n    finalComponent = <Error error={error} />;\n  } else {\n    finalComponent = recommendedMovies && (\n      <>\n        <br />\n        <br />\n        <div className=\"recommendation_section\">\n          <InputMovieCard {...inputMovieData} />\n          <br />\n        \n          <br />\n          <center>\n            <h1 className=\"title\">Recommended Movies Based On Your Search</h1>\n          </center>\n          <br />\n\n          <div className=\"cast_data_cards\">\n          {recommendedMovies.map((movie) => {\n              return (\n                <div\n                  key={movie.id}\n                  onClick={(e) => handleCardClick(movie.title)}\n                >\n                  <RowMovieCard key={movie.rank} {...movie} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      {/* Title */}\n      <TitleCard />\n\n      {/* Search */}\n      <div className=\"app__search_container\">\n        <div className=\"search_wrapper\">\n          <input\n            className=\"search_input\"\n            value={text}\n            onChange={(e) => onChangeHandler(e.target.value)}\n            onBlur={() => {\n              setTimeout(() => {\n                setSuggestions(null);\n              }, 200);\n            }}\n            type=\"text\"\n            placeholder=\"Type Movie Name\"\n          />\n\n          <Button\n            className=\"search_button\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={text === \"\"}\n            startIcon={<SearchIcon />}\n            onClick={() => handleClick()}\n          >\n            Search\n          </Button>\n\n          {suggestions && (\n            <div className=\"suggestion_container\">\n              {suggestions.map((suggestion, i) => {\n                return (\n                  <div\n                    className=\"suggestion\"\n                    onClick={() => onSuggestHandler(suggestion.title)}\n                    key={i}\n                  >\n                    {suggestion.title}\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Top Rated Movies or Movie and Recommendations */}\n\n      {finalComponent}\n\n      {/* About Application */}\n      <br />\n      <center>\n        <h1 className=\"title about_title\">About Website</h1>\n      </center>\n      <br />\n      <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\n        <div className=\"about_application_content\">\n          Welcome to WhatNEXT. This is an Machine Learning based web application in\n          which you can search for any Hollywood Movie. This Website will\n          provide all the information related to that movie, and also provide you the top 10 movie recommendations based on\n          your search. Search for a movie for better experience.\n        </div>\n      </div>\n\n      {/* About Me */}\n      <br />\n       <AboutMe />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}